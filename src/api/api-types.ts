/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/offers/create": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            email: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok";
            };
          };
        };
        /** @description Default Response */
        250: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "error";
              field?: string;
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/offers/confirm": {
    put: {
      requestBody: {
        content: {
          "application/json": {
            code: number;
            email: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok";
            };
          };
        };
        /** @description Default Response */
        250: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "error";
              field?: string;
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/auth/signUp": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            password: string;
            email: string;
            code: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok";
              data: {
                access_token: string;
                refresh_token: string;
                user: components["schemas"]["def-0"];
              };
            };
          };
        };
        /** @description Default Response */
        250: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "error";
              field?: string;
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/auth/signIn": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            password: string;
            email: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok";
              data: {
                access_token: string;
                refresh_token: string;
                user: components["schemas"]["def-0"];
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "error";
              field?: string;
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/auth/refreshToken": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            refresh_token: string;
            email: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              data: {
                access_token: string;
                refresh_token: string;
                user: components["schemas"]["def-0"];
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              field?: string;
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/admin/reviews/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-2"][];
            };
          };
        };
      };
    };
    put: {
      requestBody: {
        content: {
          "application/json": {
            id: number;
            userId?: number;
            text: string;
            login?: string;
            orderId?: number;
            isActive?: boolean;
            subjectId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              data?: components["schemas"]["def-2"];
            };
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            userId?: number;
            text: string;
            login?: string;
            orderId?: number;
            isActive?: boolean;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-2"];
            };
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
            };
          };
        };
      };
    };
  };
  "/api/admin/reviews/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-2"];
            };
          };
        };
      };
    };
  };
  "/api/admin/files/createPublic": {
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-1"];
            };
          };
        };
      };
    };
  };
  "/api/manager/time/tasks/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-5"][];
            };
          };
        };
      };
    };
    put: {
      requestBody: {
        content: {
          "application/json": {
            id: number;
            name: string;
            description?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-5"];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              field: string;
              message: string;
            };
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            description?: string;
            userId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-5"];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              field: string;
              message: string;
            };
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
            };
          };
        };
      };
    };
  };
  "/api/manager/time/tasks/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-5"];
            };
          };
        };
      };
    };
  };
  "/api/manager/time/tracks/start": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            taskId: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-6"];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              field: string;
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/manager/time/tracks/stop": {
    put: {
      requestBody: {
        content: {
          "application/json": {
            id: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-6"];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              field: string;
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/users/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-0"];
            };
          };
        };
      };
    };
  };
  "/api/files/": {
    get: {
      parameters: {
        query: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": string;
          };
        };
        /** @description Default Response */
        404: {
          content: {
            "application/json": {
              status?: string;
            };
          };
        };
      };
    };
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-1"];
            };
          };
        };
        /** @description Default Response */
        404: {
          content: {
            "application/json": {
              status?: string;
            };
          };
        };
      };
    };
  };
  "/api/files/fileInfo": {
    get: {
      parameters: {
        query: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-1"];
            };
          };
        };
        /** @description Default Response */
        404: {
          content: {
            "application/json": {
              status?: string;
            };
          };
        };
      };
    };
  };
  "/api/orders/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status?: "ok" | "error";
              data?: components["schemas"]["def-3"][];
            };
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            topic: string;
            deadline?: string;
            discription?: string;
            price?: number;
            filesIds?: number[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              data?: components["schemas"]["def-3"];
            };
          };
        };
      };
    };
  };
  "/api/orders/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** @enum {string} */
              status: "ok" | "error";
              data?: components["schemas"]["def-3"];
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** User */
    "def-0": {
      id: number;
      email: string;
      login: string;
      phone: string;
      role: string;
      createdAt?: string;
      updatedAt?: string;
    };
    /** File */
    "def-1": {
      id: number;
      isPublic?: boolean;
      fieldname: string;
      originalname: string;
      encoding: string;
      destination: string;
      filename: string;
      mimetype: string;
      path: string;
      size: number;
      createdAt?: string;
      updatedAt?: string;
      order?: components["schemas"]["def-3"] & (Record<string, unknown> | null);
      user?: components["schemas"]["def-0"] & (Record<string, unknown> | null);
    };
    /** Review */
    "def-2": {
      id: number;
      text: string;
      user?: components["schemas"]["def-0"] & (Record<string, unknown> | null);
      login?: string;
      isActive?: boolean;
      createdAt?: string;
    };
    /** Order */
    "def-3": {
      id: number;
      topic: string;
      discription: string;
      deadline: string;
      price: number;
      /** @enum {string} */
      status: "initial" | "ready-for-work" | "process" | "warranty" | "rework" | "done";
      createdAt: string;
      updatedAt?: string;
      customer: components["schemas"]["def-0"];
      files: components["schemas"]["def-1"][];
    };
    /** Offer */
    "def-4": {
      id: number;
      email: string;
      phone: string;
      createdAt?: string;
      updatedAt?: string;
    };
    /** Task */
    "def-5": {
      id: number;
      name: string;
      description?: string;
      userId: number;
      createdAt?: string;
      updatedAt?: string;
      tracks?: components["schemas"]["def-6"][];
    };
    /** Track */
    "def-6": {
      id: number;
      dateStart: string;
      dateStop?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
